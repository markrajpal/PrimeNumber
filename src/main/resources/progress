06/01/2019
Changes:
Got an implementation working completely written in Java with 1 class and 1 test class.
It uses the traditional method of finding a prime.
What works?
In milliseconds it can determine the smallest 10 digit prime.
What doesn't work?
After, 6 hours it has yet to find the smallest 11 digit prime.

06/02/2019
Changes:
Improved the prime determination to include the sum of digits divisible by 3
What works?
same
What doesn't work?
same
What's next?
Add log4j logging

06/03/2019
Changes:
none
What works?
It took about 24 hours but it got through 1000 concurrent threads
What doesn't work?
same
What's next?
Add log4j logging

06/04/2019
Changes:
none
What works?
Seems to be getting through the next increments of 1000 threads much faster.
After 48 hours it got through 10,000 threads.
What doesn't work?
same
What's next?
Add log4j logging
Move the 11 digit prime test to an Integration Test class
Support for an actual start position so we don't have to start over everytime

06/23/2019
Changes:
Fixed the broken unit tests
Fixed a bug in isPrime where counter somehow gets below 0
What works?
same
What doesn't work?
After 2 weeks, still unable to figure out the 11 digit prime
What's next?
Research what the 11 digit prime actually is
-DONE
-http://compoasso.free.fr/primelistweb/page/prime/liste_online_en.php
Add log4j logging
Move the 11 digit prime test to an Integration Test class
-DONE
Support for an actual start position so we don't have to start over everytime
Log the date/time
Switch to euclidean division

06/24/2019
Changes:
-checked to make sure all previous potential primes were checked when a prime is found
-Moved the isPrime method to the Runnable class
What works?
-11 & 12 digit
-11 digit takes 23 seconds
-12 digit takes 1m 22 seconds
What doesn't work?
-Even though 10 concurrent threads work well, 100 & 1000 don't work well
-It went bonkers when I tried 100 zeroes
What's next?
Add log4j logging
Support for an actual start position so we don't have to start over everytime
Log the date/time
Switch to euclidean division

06/25/2019
Changes:
-Runnable to Thread
What works?
-11 digit takes 1m 18s (I think I had this at 23s only once when isPrime was in the Prime class)
What doesn't work?
-Even though 10 concurrent threads work well, 1000 doesn't work
What's next?
Add log4j logging
Support for an actual start position so we don't have to start over everytime
Log the date/time
Switch to euclidean division
Rename PrimeRunnable to PrimeThread
Use Git

07/02/2019
Changes:
-Refactoring
What works?
-same
What doesn't work?
-same
What's next?
No delay for the unit tests (i.e. > 1000000)
Unit test for adding doubles
Try 100 zeroes
Add log4j logging
Support for an actual start position so we don't have to start over everytime
Log the date/time
Switch to euclidean division
Rename PrimeRunnable to PrimeThread
Use Git

07/03/2019
Changes:
-Refactoring
What works?
-same
What doesn't work?
-same
What's next?
No delay for the unit tests (i.e. > 1000000)
-Done
Unit test for adding doubles
-Simple doubles but not really large doubles
Maven
CI (Travis CI)
Try 100 zeroes
Add log4j logging
Support for an actual start position so we don't have to start over everytime
Log the date/time
Switch to euclidean division
Rename PrimeRunnable to PrimeThread
Use Git

07/04/2019
Doubles are presenting a major problem.
-It seems when you add a small number to a really large number, there is no effect.
-Need to convert all doubles to BigIntegers, but there is a risk that we may hit the upper limit real fast.

07/05/2019
Changes:
-double --> BigInteger
-setup GitHub
What works?
-The 11 & 12 digit tests run in under 2 seconds, WOW
What doesn't work?
-same
What's next?
Maven
CI (Travis CI)
Try 100 zeroes
Add log4j logging
Support for an actual start position so we don't have to start over everytime
Log the date/time
Rename PrimeRunnable to PrimeThread
Find a new primality test (possibly Miller-Rabin)
Thread the for loop in isPrime

07/08/2019
After running the 100 digit test for a few days it is evident I need to incorporate a new primality test

07/17/2019
Changes:
Added Maven support
Added log4j which provided date/time
What works?
same
What doesn't work?
-same
What's next?
CI (Travis CI)
Try 100 zeroes
Support for an actual start position so we don't have to start over everytime
Rename PrimeRunnable to PrimeThread
Find a new primality test (possibly Miller-Rabin)
Thread the for loop in isPrime

07/26/2019
Changes:
-none
What works?
-same
What doesn't work?
-same
What's next?
CI (Travis CI)
Try 100 zeroes
Support for an actual start position so we don't have to start over everytime
Rename PrimeRunnable to PrimeThread
Find a new primality test (possibly Miller-Rabin)
Thread the for loop in isPrime
Add Static Analysis:
https://maven.apache.org/plugins/maven-pmd-plugin/usage.html
https://spotbugs.readthedocs.io/en/latest/maven.html
https://maven.apache.org/plugins/maven-checkstyle-plugin/usage.html

09/12/2019
Changes:
-Added PMD
-Added a TODO
What works?
-same
What doesn't work?
-same
What's next?
CI (Travis CI)
Try 100 zeroes
Support for an actual start position so we don't have to start over everytime
Rename PrimeRunnable to PrimeThread
Find a new primality test (possibly Miller-Rabin)
Thread the for loop in isPrime
Add Static Analysis:
https://spotbugs.readthedocs.io/en/latest/maven.html
https://maven.apache.org/plugins/maven-checkstyle-plugin/usage.html

09/13/2019
Changes:
-The build will now fail if PMD finds any errors
What works?
-same
What doesn't work?
-same
What's next?
CI (Travis CI), need to run mvn verify & site
Try 100 zeroes
Support for an actual start position so we don't have to start over everytime
Rename PrimeRunnable to PrimeThread
Find a new primality test (possibly Miller-Rabin)
Thread the for loop in isPrime
Add Static Analysis:
https://spotbugs.readthedocs.io/en/latest/maven.html
https://maven.apache.org/plugins/maven-checkstyle-plugin/usage.html

10/09/2019
Changes:
-The build now incorporates SpotBugs
What works?
-same
What doesn't work?
-We should configure SpotBugs so that the effort is set to Max and the threshold to Low or Medium
What's next?
CI (Travis CI), need to run mvn verify & site
Try 100 zeroes
Support for an actual start position so we don't have to start over everytime
Rename PrimeRunnable to PrimeThread
Find a new primality test (possibly Miller-Rabin)
Thread the for loop in isPrime
Add Static Analysis:
https://maven.apache.org/plugins/maven-checkstyle-plugin/usage.html

11/12/2019
Changes:
-Added a dependency for mutation testing as well as a mutation test.
-However, it appears as if junit5 needs to be implemented, https://www.mkyong.com/junit5/junit-5-maven-examples/
What works?
-same
What doesn't work?
-same
What's next?
CI (Travis CI), need to run mvn verify & site & run long running tests as a separate build?
Try 100 zeroes
Support for an actual start position so we don't have to start over everytime
Rename PrimeRunnable to PrimeThread
Find a new primality test (possibly Miller-Rabin)
Thread the for loop in isPrime
Add Static Analysis:
https://maven.apache.org/plugins/maven-checkstyle-plugin/usage.html

11/13/2019
1. It turns out that the ArrayList is not null but some of the elements are.
They aren't null when they're added, but the become null at some point.
2. The other problem is that an endless loop is sometimes generated.
Both issues are somewhat reproducible from testRobustness().
It appears as if the 2nd problem is fixed.
It appears as if the 1st problem is fixed as well.

12/22/2019
Added Checkstyle. Just the reporting. I didn't fail the build because there are 87 errors.
Resolved 2 PMD bugs
Notes on LucasLehmer (this test only works if the number can be expressed as 2^^n -1):
31? = 2^^5 â€“ 1
U2 = 4
U3 = 4^^2 -2 = 14 mod 31 = 14
U4 = 14^^2 -2 = 194 mod 31 = 8
U5 = 8^^2 -2 = 62 mod 31 = 0
It is Prime

01/20/2020
Added a test for LucasLehmer.
However, I need a check to determine if the number can be expressed as 2^^n -1.
Then I can integrate this into the rest of the code.

02/15/2020
Stubbed in the isExpressedAsMultiplierOfTwoMinusOne function.
It needs to dynamically populate the HashMap.
Then it can be integrated into the rest of the code.

3/24/2020
I got Travis CI working.
I would like to incorporate the long running tests as a cron job.
